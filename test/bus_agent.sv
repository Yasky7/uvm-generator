//***** ***** ***** *****  *****  *****  *****  *****  *****  *****  ***** 
//Auto Generated by UVM-Generator
//Author: Jiacai Yuan
//E-mail: yuan861025184@163.com
//Contents:dut_bus_agent
//***** ***** ***** *****  *****  *****  *****  *****  *****  *****  ***** 
class dut_bus_agent extends uvm_agent;

	`uvm_component_utils(dut_bus_agent)

	//Config	//Interface
	bus_agent_config agt_cfg;
	virtual dut_bus_inf bus_inf;
	
	//TLM 
	uvm_analysis_port#(bus_req) moi_port;
	
	//Components
	dut_bus_sequencer bus_sqr;
	dut_bus_driver bus_drv;
	dut_bus_monitor bus_moi;
	
	//Constructor Function
	function new(string name="dut_bus_agent",uvm_component parent=null);
		super.new(name,parent);
	endfunction
	
	//Phase Methods
	extern virtual function void build_phase(uvm_phase phase);
	extern virtual function void connect_phase(uvm_phase phase);
	extern virtual task run_phase(uvm_phase phase);
	
	
	// Add user method here
	//e.g. task function
	// User method ends
endclass

function void dut_bus_agent::build_phase(uvm_phase phase);
	super.build_phase(phase);
	`uvm_info(get_name(),"Build Phase is Called",UVM_LOW)
	if(!uvm_config_db#(bus_agent_config)::get(this,"","agt_cfg",agt_cfg))
	begin
		`uvm_fatal(get_name(),"Failed Get {MASTER_SLAVE_BUS}} Agent Config")
	end
	if(!uvm_config_db#(virtual dut_bus_inf)::get(this,"","bus_inf",bus_inf))
	begin
		`uvm_fatal(get_name(),"Failed Get Virtual Interfac dut_bus_inf")
	end
	bus_moi=dut_bus_monitor::type_id::create("bus_moi",this);
	bus_moi.moi_cfg=agt_cfg.moi_cfg;
	if (agt_cfg.is_active==UVM_ACTIVE)
	begin
		bus_sqr=dut_bus_sequencer::type_id::create("bus_sqr",this);
		bus_sqr.sqr_cfg=agt_cfg.sqr_cfg;
		bus_drv=dut_bus_driver::type_id::create("bus_drv",this);
		bus_drv.drv_cfg=agt_cfg.drv_cfg;
	end
	
	// Add user build here
	//e.g. TLM build
	// User build ends
endfunction

function void dut_bus_agent::connect_phase(uvm_phase phase);
	super.connect_phase(phase);
	`uvm_info(get_name(),"Connect Phase is Called",UVM_LOW)
	bus_moi.bus_inf=bus_inf;
	moi_port=bus_moi.moi_port;
	if (agt_cfg.is_active==UVM_ACTIVE)
	begin
		bus_drv.bus_inf=bus_inf;
		
		bus_drv.seq_item_port.connect(bus_sqr.seq_item_export);
	end
	
	// Add user connect here
	//e.g. TLM  interface connect
	// User connect ends
endfunction

task dut_bus_agent::run_phase(uvm_phase phase);
	super.run_phase(phase);
	`uvm_info(get_name(),"Run Phase is Called",UVM_LOW)
	
	// Add user logic here

	// User logic ends
endtask



	
	
	