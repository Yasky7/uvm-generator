//***** ***** ***** *****  *****  *****  *****  *****  *****  *****  ***** 
//Auto Generated by UVM-Generator
//Author: Jiacai Yuan
//E-mail: yuan861025184@163.com
//Contents:dut_slave_sequencer
//***** ***** ***** *****  *****  *****  *****  *****  *****  *****  ***** 
class dut_slave_sequencer extends uvm_sequencer#(slave_req);

	`uvm_component_utils(dut_slave_sequencer)
	//Config
	slave_sequencer_config sqr_cfg;
	
	//TLM 
	//default seq_item_port

	//Constructor Function
	function new(string name="dut_slave_sequencer",uvm_component parent=null);
		super.new(name,parent);
	endfunction
	
	//Phase Methods
	extern virtual function void build_phase(uvm_phase phase);
	extern virtual function void connect_phase(uvm_phase phase);
	extern virtual task run_phase(uvm_phase phase);
	
	
	// Add user method here
	//e.g. task function
	// User method ends
endclass

function void dut_slave_sequencer::build_phase(uvm_phase phase);
	super.build_phase(phase);
	`uvm_info(get_name(),"Build Phase is Called",UVM_LOW)
//	if(!uvm_config_db#(slave_sequencer_config)::get(this,"","sqr_cfg",sqr_cfg))
//	begin
//		`uvm_fatal(get_name(),"Failed Get slave Sequencer Config")
//	end
		
	// Add user build here
	//e.g. TLM build sqr.set_arbitration()
	// User build ends
endfunction

function void dut_slave_sequencer::connect_phase(uvm_phase phase);
	super.connect_phase(phase);
	`uvm_info(get_name(),"Connect Phase is Called",UVM_LOW)
	
	// Add user connect here
	//e.g. TLM interface connect
	// User connect ends
endfunction

task dut_slave_sequencer::run_phase(uvm_phase phase);
	super.run_phase(phase);
	`uvm_info(get_name(),"Run Phase is Called",UVM_LOW)
	
	// Add user logic here
	
	// User logic ends
endtask